@import url('https://fonts.googleapis.com/css2?family=Abel&display=swap');

.rootelement :root {
    --x: 0;
    --y: 0;
  }

/*   FORMS   */
.loginform label {
  user-select: none;
}

.loginform button[type="submit"] {
  background-color: rgb(54, 54, 54);
  padding: 20px 40px 20px 40px;
  border: 0;
  border-radius: 100vh;
  transition: 0.3s;
  cursor: pointer;
  position: relative;
}

.loginform button[type="submit"]::after {
  content: '';
  background-color: rgb(180, 180, 180);
  transition: 0.3s;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 40%;
  height: 40%;
  clip-path: polygon(0 46%, 92% 46%, 68% 0, 74% 0, 100% 50%, 74% 100%, 68% 100%, 92% 54%, 0 54%);
}

.loginform button[type="submit"]:hover {
  background-color: rgb(77, 77, 77);
}

.loading {
  padding: 20px !important;
  cursor: wait !important;
}

.loading::after {
  background-color: rgb(152, 83, 216) !important;
  animation: loading_start 0.7s forwards, 2s loading 0.7s infinite;
}

.finished {
  padding: 20px !important;
}

.finished::after {
  background-color: rgb(16, 162, 0) !important;
  animation: finish 0.5s forwards;
}

@keyframes loading_start {
  0% {
      clip-path: polygon(0 46%, 92% 46%, 68% 0, 74% 0, 100% 50%, 74% 100%, 68% 100%, 92% 54%, 0 54%);
  }
  50% {
      /*clip-path: polygon(50% 0%, 80% 10%, 100% 36%, 100% 64%, 80% 90%, 50% 100%, 20% 90%, 0 64%, 0 36%, 20% 10%);*/
      clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%);
  }
  100% {
      clip-path: polygon(50% 0%, 50% 49%, 50% 100%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%);
  }
}

@keyframes loading {
  0% {
      clip-path: polygon(50% 0%, 50% 49%, 50% 100%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%);
  }
  25% {
      clip-path: polygon(50% 0%, 100% 50%, 50% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%);
  }
  50% {
      clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 50% 50%, 50% 50%, 50% 50%, 50% 50%, 50% 50%, 50% 50%);
  }
  75% {
      clip-path: polygon(50% 50%, 100% 50%, 50% 100%, 0 50%, 0 50%, 0 50%, 0 50%, 0 50%, 0 50%);
  }
  100% {
      clip-path: polygon(50% 0%, 50% 49%, 50% 100%, 0% 50%, 0 50%, 0 50%, 0 50%, 0 50%, 0 50%);
  }
}

@keyframes finish {
  0% {
      clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%, 0% 50%);
  }
  
  100% {
      /*clip-path: polygon(8% 56%, 44% 85%, 92% 14%, 100% 21%, 45% 100%, 0 63%, 0 63%, 0 63%, 0 63%);*/
      /*clip-path: polygon(43% 82%, 90% 12%, 100% 19%, 45% 100%, 0 62%, 9% 54%, 9% 54%, 9% 54%, 9% 54%);*/
      /*clip-path: polygon(90% 12%, 100% 19%, 45% 100%, 0 62%, 9% 54%, 9% 54%, 9% 54%, 9% 54%, 43% 82%);*/
      clip-path: polygon(38% 75%, 92% 0, 100% 8%, 39% 93%, 1% 55%, 9% 47%, 9% 47%, 9% 47%, 9% 47%);
  }
}

.loginform form {
  background-color: rgb(18, 18, 18);
  border-radius: 1em;
  padding: 0 1em 1em 1em;
  transition: 1s;
  max-height: 100vh;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
  padding: 10px;
}

.search {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  background-color: rgb(35, 35, 35);
  margin-bottom: 1em;
}

.search input {
  margin: 0 5px 0 0 !important;
}

.search button {
  display: inline-block;
}

.hidden {
  max-width: 0;
  padding: 0;
  overflow: hidden;
  clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
  white-space: nowrap;
  max-height: 0;
}

.loginform form pre {
  margin: 0;
}

.code_box {
  background-color: rgb(0, 0, 0);
  border-radius: 1em;
  display: inline-block;
}

.loginform input[type="text"], .loginform input[type="password"] {
  margin: 0 0 1vh 0;
  transition: 0.3s;
  font-size: 1.1em;
  background-color: rgb(54, 54, 54);
  color: white;
  border-radius: 100vh;
  padding: 5px 15px 5px 15px;
  outline: 0;
  border: 1px solid transparent;
  min-width: 20vw;
  position: relative;
}

.loginform input[type="text"]:hover,.loginform input[type="password"]:hover {
  background-color: rgb(77, 77, 77);
}

.loginform input[type="text"]:focus,.loginform input[type="password"]:focus {
  border: 1px solid white;
}

.loginform input[maxlength="4"] {
  margin: 5px 0 5px 0;
}

.error {
  border: 1px solid red !important;
}

.error::before {
  border: 1px solid red !important;
}

.loginform input[type="checkbox"] {
  border: 0;
  margin: 0 0.4vw 0 0;
  width: 20px;
  height: 20px;
  position: relative;
  cursor: pointer;
  text-align: center;
  transform: scale(0.5);
}

.loginform input[type="checkbox"]::before {
  content: '';
  transition: 0.3s;
  border-radius: 100vh;
  border: 0;
  background-color: rgb(76, 76, 76);
  width: 20px;
  height: 20px;
  left: 0;
  top: 0;
  position: absolute;
  cursor: pointer;
  text-align: center;
  transform: scale(2);
}

.loginform input[type="checkbox"]:after {
  content: '';
  transition: 0.3s;
  border-radius: 100vh;
  position: absolute;
  background-color: rgba(255, 255, 255, 0);
  width: 150%;
  height: 150%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.loginform input[type="checkbox"]:checked:after {
  content: '';
  transition: 0.3s;
  border-radius: 100vh;
  position: absolute;
  background-color: rgb(255, 255, 255);
  width: 150%;
  height: 150%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.flexsmall {
  display: flex;
  margin: 0 0 0.7vh 0;
  align-items: center;
}


/*  LANDING  */

.shadow {
    width: 80vw;
    height: 10vh;
    background: transparent;
    box-shadow: -1px 42px 77px 10px rgba(255, 255, 255, 0.441);
}

.main_con {
    padding-top: 5vh;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.main {
    border-radius: 1em;
    width: 70vw;
    height: 30vh;
    margin-bottom: 15vh;
    background: radial-gradient(circle, rgb(33, 33, 33) 0%, rgb(37, 37, 37) 35%, rgb(35, 35, 35) 68%, rgb(33, 33, 33) 100%);
    background-position: calc(15em * calc(var(--x) * -1)) calc(15em * calc(var(--y) * -1));
    transition: background-position 0s, transform 0.1s, max-height 1s, margin 1s;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: 5em;
    perspective: 2000px;
    transform: rotateY(calc(-10deg + calc(20deg * var(--x)))) rotateX(calc(10deg + calc(-20deg * var(--y)))) rotateZ(0deg);
    position: relative;
    animation: ambient 8s infinite;
    max-height: 50vh;
    transform-style: preserve-3d;
}

.main h1 {
    transform: translateZ(25px);
    user-select: none;
}

.main::after {
    content: '';
    position: absolute;
    width: 110%;
    height: 8px;
    border-radius: 50%;
    left: -5%;
    bottom: 0px;
    box-shadow: 0 50px 50px rgba(255, 255, 255, 0.57);
}

.hiddenBig {
    max-height: 0;
    overflow: hidden;
    margin: 0 0 0.5em 0;
}